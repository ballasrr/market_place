"""
–†–æ—É—Ç–µ—Ä –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

–ú–æ–¥—É–ª—å —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –∞–¥—Ä–µ—Å–æ–≤,
–ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞.

Routes:
    GET /register/verify-email/{token} - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –ø–æ —Ç–æ–∫–µ–Ω—É
    POST /verification/resend - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    GET /verification/status/{email} - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏

Classes:
    VerificationRouter: –ö–ª–∞—Å—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
"""

from typing import Optional

from fastapi import Depends, Query, Response
from redis import Redis
from sqlalchemy.ext.asyncio import AsyncSession

from app.core.dependencies import get_db_session, get_redis_client
from app.routes.base import BaseRouter
from app.schemas import (ResendVerificationRequestSchema,
                         ResendVerificationResponseSchema,
                         TokenExpiredResponseSchema,
                         TokenInvalidResponseSchema,
                         UserNotFoundResponseSchema,
                         VerificationResponseSchema,
                         VerificationStatusResponseSchema)
from app.services.v1.registration.service import RegisterService


class VerificationRouter(BaseRouter):
    """
    –ö–ª–∞—Å—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email.

    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è:
    - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –∞–¥—Ä–µ—Å–æ–≤ –ø–æ —Ç–æ–∫–µ–Ω—É
    - –ü–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    - –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ email

    Attributes:
        router (APIRouter): FastAPI —Ä–æ—É—Ç–µ—Ä —Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞–º–∏
    """

    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–æ—É—Ç–µ—Ä –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.
        """
        super().__init__(prefix="verification", tags=["Verification"])

    def configure(self):
        """
        –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.

        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç endpoints –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏,
        –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email.
        """

        @self.router.get(
            path="/verify-email/{token}",
            response_model=VerificationResponseSchema,
            summary="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –∞–¥—Ä–µ—Å–∞",
            # description="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç email –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–æ–∫–µ–Ω—É –∏–∑ –ø–∏—Å—å–º–∞",
            responses={
                200: {
                    "model": VerificationResponseSchema,
                    "description": "Email —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω",
                },
                400: {
                    "model": TokenInvalidResponseSchema,
                    "description": "–ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                },
                419: {
                    "model": TokenExpiredResponseSchema,
                    "description": "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞ –∏—Å—Ç–µ–∫",
                },
                404: {
                    "model": UserNotFoundResponseSchema,
                    "description": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
                },
            },
        )
        async def verify_email(
            token: str,
            response: Response,
            use_cookies: bool = Query(
                False, description="–û–±–Ω–æ–≤–∏—Ç—å –∫—É–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏"
            ),
            session: AsyncSession = Depends(get_db_session),
            redis: Optional[Redis] = Depends(get_redis_client),
        ) -> VerificationResponseSchema:
            """
            ## ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –∞–¥—Ä–µ—Å–∞

            –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–æ–∫–µ–Ω—É –∏–∑ –ø–∏—Å—å–º–∞ –∏ –≤—ã–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞.

            ### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            * **token**: –¢–æ–∫–µ–Ω –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑ –ø–∏—Å—å–º–∞
            * **use_cookies**: –û–±–Ω–æ–≤–∏—Ç—å –∫—É–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏

            ### Returns:
            * –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å –ø–æ–ª–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞

            ### –ü—Ä–æ—Ü–µ—Å—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏:
            1. –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ is_verified=true
            3. –í—ã–¥–∞—á–∞ –ø–æ–ª–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ –¥–æ—Å—Ç—É–ø–∞
            4. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            5. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É–∫–æ–≤
            """
            return await RegisterService(session, redis).verify_email(
                token, response, use_cookies
            )

        @self.router.post(
            path="/resend",
            response_model=ResendVerificationResponseSchema,
            summary="–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
            # description="–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –∞–¥—Ä–µ—Å–∞",
            responses={
                200: {
                    "model": ResendVerificationResponseSchema,
                    "description": "–ü–∏—Å—å–º–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ",
                },
                404: {
                    "model": UserNotFoundResponseSchema,
                    "description": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
                },
            },
        )
        async def resend_verification_email(
            request: ResendVerificationRequestSchema,
            session: AsyncSession = Depends(get_db_session),
            redis: Optional[Redis] = Depends(get_redis_client),
        ) -> ResendVerificationResponseSchema:
            """
            ## üìß –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å—å–º–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email

            –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –ø–∏—Å—å–º–æ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è email –∞–¥—Ä–µ—Å–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–ª—É—á–∏–ª –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –∏–ª–∏ –æ–Ω–æ –∏—Å—Ç–µ–∫–ª–æ.

            ### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            * **email**: Email –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏

            ### Returns:
            * –°—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞
            """
            return await RegisterService(session, redis).resend_verification_email(
                request.email
            )

        @self.router.get(
            path="/status/{email}",
            response_model=VerificationStatusResponseSchema,
            summary="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
            # description="–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –ª–∏ email –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
            responses={
                200: {
                    "model": VerificationStatusResponseSchema,
                    "description": "–°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω",
                },
                404: {
                    "model": UserNotFoundResponseSchema,
                    "description": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
                },
            },
        )
        async def check_verification_status(
            email: str,
            session: AsyncSession = Depends(get_db_session),
            redis: Optional[Redis] = Depends(get_redis_client),
        ) -> VerificationStatusResponseSchema:
            """
            ## ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏

            –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –ª–∏ email –∞–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ.
            –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞.

            ### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            * **email**: Email –∞–¥—Ä–µ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞

            ### Returns:
            * **email**: –ü—Ä–æ–≤–µ—Ä—è–µ–º—ã–π email –∞–¥—Ä–µ—Å
            * **is_verified**: –°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ (true/false)

            ### –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
            * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ø–∏—Å—å–º–∞
            * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–π email
            """
            return await RegisterService(session, redis).check_verification_status(
                email
            )
